CSS stands for Cascading Style Sheets.

- Cascading refers to the way CSS applies one style on top of another.
- Style Sheets control the look and feel of web documents.

CSS allows you to apply specific styles to specific HTML elements.

The main benefit of CSS is that it allows you to separate style from content
All formatting can (and should) be removed from the HTML document and stored in a separate CSS file
Inline CSS:
In order to use an inline style, add the style attribute to the relevant tag. 
<p style="color:white; background-color:gray;">
    This is an example of inline styling. 
</p>
Embedded/Internal CSS:
Internal styles are defined within the <style> element, inside the head section of an HTML page
<html>
   <head>
      <style>
      p {
         color:white;
         background-color:gray;
      }
      </style>
   </head>
   <body>
      <p>This is my first paragraph. </p>
      <p>This is my second paragraph. </p>
   </body>
</html>

External CSS

With this method, all styling rules are contained in a single text file, which is saved with the .css extension. 

This CSS file is then referenced in the HTML using the <link> tag. The <link> element goes inside the head section
<head>
   <link rel="stylesheet" href="example.css">
</head>
<body>
   <p>This is my first paragraph.</p>
   <p>This is my second paragraph. </p>
   <p>This is my third paragraph. </p>
</body>

A style rule has three parts: selector, property, and value. 
eg: h1 {color:orange;} -- this is a type selector

Selectors::----

To select an element with a specific id, use a hash character, and then follow it with the id of the element
The HTML: 
<div id="intro">
   <p> This paragraph is in the intro section.</p>
</div>
<p> This paragraph is not in the intro section.</p>

The CSS: 
#intro {
   color: white;
   background-color: gray;
}

Class selectors work in a similar way. The major difference is that IDs can only be applied once per page, while classes can be used as many times on a page as needed. 

In the example below, both paragraphs having the class "first" will be affected by the CSS: 

The HTML: 
<div>
   <p class="first">This is a paragraph</p>
   <p> This is the second paragraph. </p>
</div>
<p class="first"> This is not in the intro section</p>
<p> The second paragraph is not in the intro section. </p>

The CSS: 
.first {font-size: 200%;}
To select elements with a specific class, use a period character, followed by the name of the class.

Descendant Selectors

These selectors are used to select elements that are descendants of another element. When selecting levels, you can select as many levels deep as you need to. 

For example, to target only <em> elements in the first paragraph of the "intro" section:

The HTML: 
<div id="intro">
   <p class="first">This is a <em> paragraph.</em></p>
   <p> This is the second paragraph. </p>
</div>
<p class="first"> This is not in the intro section.</p>
<p> The second paragraph is not in the intro section. </p>

The CSS: 
#intro .first em {
   color: pink; 
   background-color:gray;
}

Working with Text properties:
------------------
font-family has two properties:
font-family : Specific font property like Arial,Times New Roman etc
Generic-family:Serif,Sans-serif,Monospace
p 
 {
    font-family : Arial,"Times New Roman",serif;
}

font-size:
p {
   font-size: 15pz;
}

font-style:
p{
    font-style:italic/oblique/normal;
}

font-weight:
The font-weight controls the boldness or thickness of the text
p{
    font-weight:bold/bolder/lighter/"any value from 100 to 900";
}

Font-variant:
The CSS font-variant property allows you to convert your font to all small caps. The values can be set as 
normal, small-caps, and inherit
p{
    font-variant:small-caps/normal/inherit;
}

Color property:
p{
    color:red;
}
colort properties are assigned with red ,green or blue(RGB)
colors can also be defined in hexadecimal values i.e., # to 6 & 0-F

text-align Property:
text-align property values are as follows: left, right, center, and justify. 
p.left {
   text-align: left/right/center/justify;
}
When text-align is set to "justify", each line is stretched so that every line has equal width, and the left and right margins are 
straight (as in magazines and newspapers).

The vertical-align Property :
The vertical-align property sets an element's vertical alignment. Commonly used values are top, middle, and bottom.
p{
    vertical-align:top/bottom/middle;
}
The vertical-align property also takes the following values: baseline, sub, super, % and px (or pt, cm). 
The HTML: 
<div class="main">
   <div class="paragraph">
   This text is aligned to the middle
   </div>
</div>

The CSS: 
.main {
    height: 150px; width: 400px;
    background-color: LightSkyBlue;
    display: inline-table;
}
.paragraph {
    display: table-cell;
    vertical-align: middle;
}

The text-decoration Property 

The text-decoration property specifies how the text will be decorated. 

Commonly used values are:
none - The default value, this defines a normal text
inherit - Inherits this property from its parent element
overline - Draws a horizontal line above the text
underline - Draws a horizontal line below the text
line-through - draws a horizontal line through the text (substitutes the HTML <s> tag)

The text-indent Property :
The text-indent property specifies how much horizontal space should be left before the beginning of the first line of the text. Property values are 
length (px, pt, cm, em, etc.), %, and inherit

The text-transform Property:
The text-transform CSS property specifies how to capitalize an element's text. For example, it can be used to 
make text appear with each word capitalized.
p{
    text-transform:capitalize;
}

The letter-spacing Property:
The letter-spacing property specifies the space between characters in a text. The values can be set as:
- normal defines the default style with no extra space between characters
- length defines an extra space between characters using measurement units like px, pt, cm, mm, etc.;
- inherit inherits the property from its parent element;
p{
    letter-spacing:5px;
}

The word-spacing Property:
The word-spacing property specifies the space between words in a text. Just like the letter-spacing property, you can set the 
word-spacing values as normal, length, and inherit. 
p{
    word-spacing:15px;
}

The white-space Property:
The white-space property specifies how white-space inside an element is handled.
The values can be set as normal, inherit, nowrap, etc. 
The nowrap value makes the text continue on the same line until a <br> tag is encountered, and also collapses 
all sequences of whitespace into a single whitespace.
p{
    white-space:normal;
}

The CSS Box Model:
-------------------
All HTML elements can be considered as boxes. The CSS box model represents the design and layout of the site. It consists of margins
, borders, paddings, and the actual content. 
The properties work in the same order: top, right, bottom, and left. 
The image below illustrates the box model: 
->Every element Html element is a box

border property:
The CSS border property allows you to customize the borders of HTML elements.
In order to add a border to the element, you need to specify the size, style, and color of the border. 
The example below shows how to add a solid green border to the paragraph.
p{
    border:10px solid green;
}

Border Width:
The properties for the border can be set separately. The border-width property specifies the width
 of the border.
p{
    border-width:5px;
}
Border Color:
The border color of the element can be defined using a color name, RGB, or Hex values. 

Border-style:
p.none {border-style: none;}
p.dotted {border-style: dotted;}
p.dashed {border-style: dashed;}
p.double {border-style: double;}
p.groove {border-style: groove;}
p.ridge {border-style: ridge;}
p.inset {border-style: inset;}
p.outset {border-style: outset;}
p.hidden {border-style: hidden;}

Other Properties:
background-color
background-image
background-repeat

The background-image:
The background-image property sets one or several background images in an element. Let's set a 
background-image for the <body> element.
body {
   background-image: url("css_logo.png");
   background-color: #e9e9e9;
}
The background-attachment Property:
The background-attachment property sets whether a background image is fixed or scrolls with the rest of the page.
Even if an element has a scrolling mechanism, a "fixed" background doesn't move with the element

body {
   background-image: url("css_logo.png");
   background-repeat: no-repeat;
   background-attachment: fixed/inherit/scroll;
}

The list-style-type Property :
The CSS list properties allow us to set different list item markers. In HTML, there are two types of lists:
unordered lists (<ul>) - the list items are marked with bullets
ordered lists (<ol>) - the list items are marked with numbers or letters
With CSS, lists can be styled further, and images can be used as the list item marker.
One of the ways is to use the list-style-type property, which can be set to circle, square, decimal, disc, lower-alpha, etc. 
ol.lower-alpha {
   list-style-type: lower-alpha;
}
ul.circle {
   list-style-type: circle;
}
ul.square {
   list-style-type: square;
}

The List Image and Position:
There are also other list properties, such as:
list-style-image - specifies an image to be used as the list item marker.
list-style-position - specifies the position of the marker box (inside, outside).
The HTML:
<p>The following list has list-style-position: <strong>inside</strong>.</p>
<ul>
   <li>Red</li>
   <li>Green</li>
   <li>Blue</li>
</ul>

The CSS:
ul {
   list-style-image: url("logo.jpg");
   list-style-position: inside;
}
Setting Styles to Links:
Links can be styled with any CSS property (e.g., color, font-family, background, etc.).
In addition, links can be styled differently, depending on what state they are in. The following pseudo selectors are available:
a:link - defines the style for normal unvisited links
a:visited - defines the style for visited links
a:active - a link becomes active once you click on it
a:hover - a link is hovered when the mouse is over it
a:hover {
   color: red;
}
The overflow Property :
There are four values for the overflow property: visible (the default value), scroll, hidden, and auto. 
The value scroll results in clipped overflow, but a scrollbar is added, so the rest of the content
may be seen.

The CSS: 
div {
   width: 150px;
   height: 150px;
   background-color: LightBlue;
   float: left;
   overflow: scroll;
}

